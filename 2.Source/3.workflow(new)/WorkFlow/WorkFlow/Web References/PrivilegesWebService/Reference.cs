//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1008 版自动生成。
// 
#pragma warning disable 1591

namespace WorkFlow.PrivilegesWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="privilegesBLLserviceSoap", Namespace="http://saron.workflowservice.org/")]
    public partial class privilegesBLLservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SecurityContext securityContextValueField;
        
        private System.Threading.SendOrPostCallback ExistsItemOfPrivilegesTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsPrivilegeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllListByAppIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListByPrivilegeTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopMenuPrivilegeListOfAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsChildrenPMenusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemIDByPIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenPMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuPrivilegeListOfAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuAndElementPrivilegeListOfAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuAndElementPrivilegeListOfRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ParentMenuIDOfMenuPrivilegeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuPrivilegeIDByMenuIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemIDOfPrivilegesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public privilegesBLLservice() {
            this.Url = global::WorkFlow.Properties.Settings.Default.WorkFlow_PrivilegesWebService_privilegesBLLservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SecurityContext SecurityContextValue {
            get {
                return this.securityContextValueField;
            }
            set {
                this.securityContextValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExistsItemOfPrivilegesTypeCompletedEventHandler ExistsItemOfPrivilegesTypeCompleted;
        
        /// <remarks/>
        public event ExistsPrivilegeNameCompletedEventHandler ExistsPrivilegeNameCompleted;
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event GetModelCompletedEventHandler GetModelCompleted;
        
        /// <remarks/>
        public event GetAllListByAppIDCompletedEventHandler GetAllListByAppIDCompleted;
        
        /// <remarks/>
        public event GetListByPrivilegeTypeCompletedEventHandler GetListByPrivilegeTypeCompleted;
        
        /// <remarks/>
        public event GetTopMenuPrivilegeListOfAppCompletedEventHandler GetTopMenuPrivilegeListOfAppCompleted;
        
        /// <remarks/>
        public event ExistsChildrenPMenusCompletedEventHandler ExistsChildrenPMenusCompleted;
        
        /// <remarks/>
        public event GetItemIDByPIDCompletedEventHandler GetItemIDByPIDCompleted;
        
        /// <remarks/>
        public event GetChildrenPMenuCompletedEventHandler GetChildrenPMenuCompleted;
        
        /// <remarks/>
        public event GetMenuPrivilegeListOfAppCompletedEventHandler GetMenuPrivilegeListOfAppCompleted;
        
        /// <remarks/>
        public event GetMenuAndElementPrivilegeListOfAppCompletedEventHandler GetMenuAndElementPrivilegeListOfAppCompleted;
        
        /// <remarks/>
        public event GetMenuAndElementPrivilegeListOfRoleCompletedEventHandler GetMenuAndElementPrivilegeListOfRoleCompleted;
        
        /// <remarks/>
        public event ParentMenuIDOfMenuPrivilegeCompletedEventHandler ParentMenuIDOfMenuPrivilegeCompleted;
        
        /// <remarks/>
        public event GetMenuPrivilegeIDByMenuIDCompletedEventHandler GetMenuPrivilegeIDByMenuIDCompleted;
        
        /// <remarks/>
        public event GetItemIDOfPrivilegesCompletedEventHandler GetItemIDOfPrivilegesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/ExistsItemOfPrivilegesType", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsItemOfPrivilegesType(int privilegesTypeID, int privilegesItemID, out string msg) {
            object[] results = this.Invoke("ExistsItemOfPrivilegesType", new object[] {
                        privilegesTypeID,
                        privilegesItemID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsItemOfPrivilegesTypeAsync(int privilegesTypeID, int privilegesItemID) {
            this.ExistsItemOfPrivilegesTypeAsync(privilegesTypeID, privilegesItemID, null);
        }
        
        /// <remarks/>
        public void ExistsItemOfPrivilegesTypeAsync(int privilegesTypeID, int privilegesItemID, object userState) {
            if ((this.ExistsItemOfPrivilegesTypeOperationCompleted == null)) {
                this.ExistsItemOfPrivilegesTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsItemOfPrivilegesTypeOperationCompleted);
            }
            this.InvokeAsync("ExistsItemOfPrivilegesType", new object[] {
                        privilegesTypeID,
                        privilegesItemID}, this.ExistsItemOfPrivilegesTypeOperationCompleted, userState);
        }
        
        private void OnExistsItemOfPrivilegesTypeOperationCompleted(object arg) {
            if ((this.ExistsItemOfPrivilegesTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsItemOfPrivilegesTypeCompleted(this, new ExistsItemOfPrivilegesTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/ExistsPrivilegeName", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsPrivilegeName(string privilegeName, int appID, int pm_typeid, out string msg) {
            object[] results = this.Invoke("ExistsPrivilegeName", new object[] {
                        privilegeName,
                        appID,
                        pm_typeid});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsPrivilegeNameAsync(string privilegeName, int appID, int pm_typeid) {
            this.ExistsPrivilegeNameAsync(privilegeName, appID, pm_typeid, null);
        }
        
        /// <remarks/>
        public void ExistsPrivilegeNameAsync(string privilegeName, int appID, int pm_typeid, object userState) {
            if ((this.ExistsPrivilegeNameOperationCompleted == null)) {
                this.ExistsPrivilegeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsPrivilegeNameOperationCompleted);
            }
            this.InvokeAsync("ExistsPrivilegeName", new object[] {
                        privilegeName,
                        appID,
                        pm_typeid}, this.ExistsPrivilegeNameOperationCompleted, userState);
        }
        
        private void OnExistsPrivilegeNameOperationCompleted(object arg) {
            if ((this.ExistsPrivilegeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsPrivilegeNameCompleted(this, new ExistsPrivilegeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/Add", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Add(privilegesModel model, out string msg) {
            object[] results = this.Invoke("Add", new object[] {
                        model});
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddAsync(privilegesModel model) {
            this.AddAsync(model, null);
        }
        
        /// <remarks/>
        public void AddAsync(privilegesModel model, object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        model}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/Update", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(privilegesModel model, out string msg) {
            object[] results = this.Invoke("Update", new object[] {
                        model});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(privilegesModel model) {
            this.UpdateAsync(model, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(privilegesModel model, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        model}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/Delete", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(int id, out string msg) {
            object[] results = this.Invoke("Delete", new object[] {
                        id});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(int id) {
            this.DeleteAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(int id, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        id}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetModel", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public privilegesModel GetModel(int id, out string msg) {
            object[] results = this.Invoke("GetModel", new object[] {
                        id});
            msg = ((string)(results[1]));
            return ((privilegesModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetModelAsync(int id) {
            this.GetModelAsync(id, null);
        }
        
        /// <remarks/>
        public void GetModelAsync(int id, object userState) {
            if ((this.GetModelOperationCompleted == null)) {
                this.GetModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModelOperationCompleted);
            }
            this.InvokeAsync("GetModel", new object[] {
                        id}, this.GetModelOperationCompleted, userState);
        }
        
        private void OnGetModelOperationCompleted(object arg) {
            if ((this.GetModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModelCompleted(this, new GetModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetAllListByAppID", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllListByAppID(int appID, out string msg) {
            object[] results = this.Invoke("GetAllListByAppID", new object[] {
                        appID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllListByAppIDAsync(int appID) {
            this.GetAllListByAppIDAsync(appID, null);
        }
        
        /// <remarks/>
        public void GetAllListByAppIDAsync(int appID, object userState) {
            if ((this.GetAllListByAppIDOperationCompleted == null)) {
                this.GetAllListByAppIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllListByAppIDOperationCompleted);
            }
            this.InvokeAsync("GetAllListByAppID", new object[] {
                        appID}, this.GetAllListByAppIDOperationCompleted, userState);
        }
        
        private void OnGetAllListByAppIDOperationCompleted(object arg) {
            if ((this.GetAllListByAppIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllListByAppIDCompleted(this, new GetAllListByAppIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetListByPrivilegeType", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListByPrivilegeType(int privilegeTypeID, int appID, out string msg) {
            object[] results = this.Invoke("GetListByPrivilegeType", new object[] {
                        privilegeTypeID,
                        appID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListByPrivilegeTypeAsync(int privilegeTypeID, int appID) {
            this.GetListByPrivilegeTypeAsync(privilegeTypeID, appID, null);
        }
        
        /// <remarks/>
        public void GetListByPrivilegeTypeAsync(int privilegeTypeID, int appID, object userState) {
            if ((this.GetListByPrivilegeTypeOperationCompleted == null)) {
                this.GetListByPrivilegeTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListByPrivilegeTypeOperationCompleted);
            }
            this.InvokeAsync("GetListByPrivilegeType", new object[] {
                        privilegeTypeID,
                        appID}, this.GetListByPrivilegeTypeOperationCompleted, userState);
        }
        
        private void OnGetListByPrivilegeTypeOperationCompleted(object arg) {
            if ((this.GetListByPrivilegeTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListByPrivilegeTypeCompleted(this, new GetListByPrivilegeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetTopMenuPrivilegeListOfApp", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTopMenuPrivilegeListOfApp(int appID, out string msg) {
            object[] results = this.Invoke("GetTopMenuPrivilegeListOfApp", new object[] {
                        appID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopMenuPrivilegeListOfAppAsync(int appID) {
            this.GetTopMenuPrivilegeListOfAppAsync(appID, null);
        }
        
        /// <remarks/>
        public void GetTopMenuPrivilegeListOfAppAsync(int appID, object userState) {
            if ((this.GetTopMenuPrivilegeListOfAppOperationCompleted == null)) {
                this.GetTopMenuPrivilegeListOfAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopMenuPrivilegeListOfAppOperationCompleted);
            }
            this.InvokeAsync("GetTopMenuPrivilegeListOfApp", new object[] {
                        appID}, this.GetTopMenuPrivilegeListOfAppOperationCompleted, userState);
        }
        
        private void OnGetTopMenuPrivilegeListOfAppOperationCompleted(object arg) {
            if ((this.GetTopMenuPrivilegeListOfAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopMenuPrivilegeListOfAppCompleted(this, new GetTopMenuPrivilegeListOfAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/ExistsChildrenPMenus", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsChildrenPMenus(int parentID, int appID, out string msg) {
            object[] results = this.Invoke("ExistsChildrenPMenus", new object[] {
                        parentID,
                        appID});
            msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsChildrenPMenusAsync(int parentID, int appID) {
            this.ExistsChildrenPMenusAsync(parentID, appID, null);
        }
        
        /// <remarks/>
        public void ExistsChildrenPMenusAsync(int parentID, int appID, object userState) {
            if ((this.ExistsChildrenPMenusOperationCompleted == null)) {
                this.ExistsChildrenPMenusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsChildrenPMenusOperationCompleted);
            }
            this.InvokeAsync("ExistsChildrenPMenus", new object[] {
                        parentID,
                        appID}, this.ExistsChildrenPMenusOperationCompleted, userState);
        }
        
        private void OnExistsChildrenPMenusOperationCompleted(object arg) {
            if ((this.ExistsChildrenPMenusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsChildrenPMenusCompleted(this, new ExistsChildrenPMenusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetItemIDByPID", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemIDByPID(int pID, int appID, out string msg) {
            object[] results = this.Invoke("GetItemIDByPID", new object[] {
                        pID,
                        appID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemIDByPIDAsync(int pID, int appID) {
            this.GetItemIDByPIDAsync(pID, appID, null);
        }
        
        /// <remarks/>
        public void GetItemIDByPIDAsync(int pID, int appID, object userState) {
            if ((this.GetItemIDByPIDOperationCompleted == null)) {
                this.GetItemIDByPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemIDByPIDOperationCompleted);
            }
            this.InvokeAsync("GetItemIDByPID", new object[] {
                        pID,
                        appID}, this.GetItemIDByPIDOperationCompleted, userState);
        }
        
        private void OnGetItemIDByPIDOperationCompleted(object arg) {
            if ((this.GetItemIDByPIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemIDByPIDCompleted(this, new GetItemIDByPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetChildrenPMenu", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenPMenu(int parentID, int appID, out string msg) {
            object[] results = this.Invoke("GetChildrenPMenu", new object[] {
                        parentID,
                        appID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenPMenuAsync(int parentID, int appID) {
            this.GetChildrenPMenuAsync(parentID, appID, null);
        }
        
        /// <remarks/>
        public void GetChildrenPMenuAsync(int parentID, int appID, object userState) {
            if ((this.GetChildrenPMenuOperationCompleted == null)) {
                this.GetChildrenPMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenPMenuOperationCompleted);
            }
            this.InvokeAsync("GetChildrenPMenu", new object[] {
                        parentID,
                        appID}, this.GetChildrenPMenuOperationCompleted, userState);
        }
        
        private void OnGetChildrenPMenuOperationCompleted(object arg) {
            if ((this.GetChildrenPMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenPMenuCompleted(this, new GetChildrenPMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetMenuPrivilegeListOfApp", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMenuPrivilegeListOfApp(int appID, out string msg) {
            object[] results = this.Invoke("GetMenuPrivilegeListOfApp", new object[] {
                        appID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuPrivilegeListOfAppAsync(int appID) {
            this.GetMenuPrivilegeListOfAppAsync(appID, null);
        }
        
        /// <remarks/>
        public void GetMenuPrivilegeListOfAppAsync(int appID, object userState) {
            if ((this.GetMenuPrivilegeListOfAppOperationCompleted == null)) {
                this.GetMenuPrivilegeListOfAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuPrivilegeListOfAppOperationCompleted);
            }
            this.InvokeAsync("GetMenuPrivilegeListOfApp", new object[] {
                        appID}, this.GetMenuPrivilegeListOfAppOperationCompleted, userState);
        }
        
        private void OnGetMenuPrivilegeListOfAppOperationCompleted(object arg) {
            if ((this.GetMenuPrivilegeListOfAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuPrivilegeListOfAppCompleted(this, new GetMenuPrivilegeListOfAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetMenuAndElementPrivilegeListOfApp", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMenuAndElementPrivilegeListOfApp(int appID, out string msg) {
            object[] results = this.Invoke("GetMenuAndElementPrivilegeListOfApp", new object[] {
                        appID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuAndElementPrivilegeListOfAppAsync(int appID) {
            this.GetMenuAndElementPrivilegeListOfAppAsync(appID, null);
        }
        
        /// <remarks/>
        public void GetMenuAndElementPrivilegeListOfAppAsync(int appID, object userState) {
            if ((this.GetMenuAndElementPrivilegeListOfAppOperationCompleted == null)) {
                this.GetMenuAndElementPrivilegeListOfAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuAndElementPrivilegeListOfAppOperationCompleted);
            }
            this.InvokeAsync("GetMenuAndElementPrivilegeListOfApp", new object[] {
                        appID}, this.GetMenuAndElementPrivilegeListOfAppOperationCompleted, userState);
        }
        
        private void OnGetMenuAndElementPrivilegeListOfAppOperationCompleted(object arg) {
            if ((this.GetMenuAndElementPrivilegeListOfAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuAndElementPrivilegeListOfAppCompleted(this, new GetMenuAndElementPrivilegeListOfAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetMenuAndElementPrivilegeListOfRole", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMenuAndElementPrivilegeListOfRole(int roleID, out string msg) {
            object[] results = this.Invoke("GetMenuAndElementPrivilegeListOfRole", new object[] {
                        roleID});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuAndElementPrivilegeListOfRoleAsync(int roleID) {
            this.GetMenuAndElementPrivilegeListOfRoleAsync(roleID, null);
        }
        
        /// <remarks/>
        public void GetMenuAndElementPrivilegeListOfRoleAsync(int roleID, object userState) {
            if ((this.GetMenuAndElementPrivilegeListOfRoleOperationCompleted == null)) {
                this.GetMenuAndElementPrivilegeListOfRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuAndElementPrivilegeListOfRoleOperationCompleted);
            }
            this.InvokeAsync("GetMenuAndElementPrivilegeListOfRole", new object[] {
                        roleID}, this.GetMenuAndElementPrivilegeListOfRoleOperationCompleted, userState);
        }
        
        private void OnGetMenuAndElementPrivilegeListOfRoleOperationCompleted(object arg) {
            if ((this.GetMenuAndElementPrivilegeListOfRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuAndElementPrivilegeListOfRoleCompleted(this, new GetMenuAndElementPrivilegeListOfRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/ParentMenuIDOfMenuPrivilege", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ParentMenuIDOfMenuPrivilege(int menuprivilegeID, out string msg) {
            object[] results = this.Invoke("ParentMenuIDOfMenuPrivilege", new object[] {
                        menuprivilegeID});
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ParentMenuIDOfMenuPrivilegeAsync(int menuprivilegeID) {
            this.ParentMenuIDOfMenuPrivilegeAsync(menuprivilegeID, null);
        }
        
        /// <remarks/>
        public void ParentMenuIDOfMenuPrivilegeAsync(int menuprivilegeID, object userState) {
            if ((this.ParentMenuIDOfMenuPrivilegeOperationCompleted == null)) {
                this.ParentMenuIDOfMenuPrivilegeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnParentMenuIDOfMenuPrivilegeOperationCompleted);
            }
            this.InvokeAsync("ParentMenuIDOfMenuPrivilege", new object[] {
                        menuprivilegeID}, this.ParentMenuIDOfMenuPrivilegeOperationCompleted, userState);
        }
        
        private void OnParentMenuIDOfMenuPrivilegeOperationCompleted(object arg) {
            if ((this.ParentMenuIDOfMenuPrivilegeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ParentMenuIDOfMenuPrivilegeCompleted(this, new ParentMenuIDOfMenuPrivilegeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetMenuPrivilegeIDByMenuID", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMenuPrivilegeIDByMenuID(int menuID, out string msg) {
            object[] results = this.Invoke("GetMenuPrivilegeIDByMenuID", new object[] {
                        menuID});
            msg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuPrivilegeIDByMenuIDAsync(int menuID) {
            this.GetMenuPrivilegeIDByMenuIDAsync(menuID, null);
        }
        
        /// <remarks/>
        public void GetMenuPrivilegeIDByMenuIDAsync(int menuID, object userState) {
            if ((this.GetMenuPrivilegeIDByMenuIDOperationCompleted == null)) {
                this.GetMenuPrivilegeIDByMenuIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuPrivilegeIDByMenuIDOperationCompleted);
            }
            this.InvokeAsync("GetMenuPrivilegeIDByMenuID", new object[] {
                        menuID}, this.GetMenuPrivilegeIDByMenuIDOperationCompleted, userState);
        }
        
        private void OnGetMenuPrivilegeIDByMenuIDOperationCompleted(object arg) {
            if ((this.GetMenuPrivilegeIDByMenuIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuPrivilegeIDByMenuIDCompleted(this, new GetMenuPrivilegeIDByMenuIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://saron.workflowservice.org/GetItemIDOfPrivileges", RequestNamespace="http://saron.workflowservice.org/", ResponseNamespace="http://saron.workflowservice.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemIDOfPrivileges(int appID, int flag, out string msg) {
            object[] results = this.Invoke("GetItemIDOfPrivileges", new object[] {
                        appID,
                        flag});
            msg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemIDOfPrivilegesAsync(int appID, int flag) {
            this.GetItemIDOfPrivilegesAsync(appID, flag, null);
        }
        
        /// <remarks/>
        public void GetItemIDOfPrivilegesAsync(int appID, int flag, object userState) {
            if ((this.GetItemIDOfPrivilegesOperationCompleted == null)) {
                this.GetItemIDOfPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemIDOfPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetItemIDOfPrivileges", new object[] {
                        appID,
                        flag}, this.GetItemIDOfPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetItemIDOfPrivilegesOperationCompleted(object arg) {
            if ((this.GetItemIDOfPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemIDOfPrivilegesCompleted(this, new GetItemIDOfPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://saron.workflowservice.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://saron.workflowservice.org/", IsNullable=false)]
    public partial class SecurityContext : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passWordField;
        
        private int appIDField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
        
        /// <remarks/>
        public int AppID {
            get {
                return this.appIDField;
            }
            set {
                this.appIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://saron.workflowservice.org/")]
    public partial class privilegesModel {
        
        private int idField;
        
        private string nameField;
        
        private int privilegetype_idField;
        
        private int privilegeitem_idField;
        
        private string remarkField;
        
        private int app_idField;
        
        private bool invalidField;
        
        private System.DateTime created_atField;
        
        private int created_byField;
        
        private string created_ipField;
        
        private System.Nullable<System.DateTime> updated_atField;
        
        private System.Nullable<int> updated_byField;
        
        private string updated_ipField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int privilegetype_id {
            get {
                return this.privilegetype_idField;
            }
            set {
                this.privilegetype_idField = value;
            }
        }
        
        /// <remarks/>
        public int privilegeitem_id {
            get {
                return this.privilegeitem_idField;
            }
            set {
                this.privilegeitem_idField = value;
            }
        }
        
        /// <remarks/>
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int app_id {
            get {
                return this.app_idField;
            }
            set {
                this.app_idField = value;
            }
        }
        
        /// <remarks/>
        public bool invalid {
            get {
                return this.invalidField;
            }
            set {
                this.invalidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime created_at {
            get {
                return this.created_atField;
            }
            set {
                this.created_atField = value;
            }
        }
        
        /// <remarks/>
        public int created_by {
            get {
                return this.created_byField;
            }
            set {
                this.created_byField = value;
            }
        }
        
        /// <remarks/>
        public string created_ip {
            get {
                return this.created_ipField;
            }
            set {
                this.created_ipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updated_at {
            get {
                return this.updated_atField;
            }
            set {
                this.updated_atField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> updated_by {
            get {
                return this.updated_byField;
            }
            set {
                this.updated_byField = value;
            }
        }
        
        /// <remarks/>
        public string updated_ip {
            get {
                return this.updated_ipField;
            }
            set {
                this.updated_ipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExistsItemOfPrivilegesTypeCompletedEventHandler(object sender, ExistsItemOfPrivilegesTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsItemOfPrivilegesTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsItemOfPrivilegesTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExistsPrivilegeNameCompletedEventHandler(object sender, ExistsPrivilegeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsPrivilegeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsPrivilegeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddCompletedEventHandler(object sender, AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetModelCompletedEventHandler(object sender, GetModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public privilegesModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privilegesModel)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllListByAppIDCompletedEventHandler(object sender, GetAllListByAppIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllListByAppIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllListByAppIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetListByPrivilegeTypeCompletedEventHandler(object sender, GetListByPrivilegeTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListByPrivilegeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListByPrivilegeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTopMenuPrivilegeListOfAppCompletedEventHandler(object sender, GetTopMenuPrivilegeListOfAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopMenuPrivilegeListOfAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopMenuPrivilegeListOfAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExistsChildrenPMenusCompletedEventHandler(object sender, ExistsChildrenPMenusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsChildrenPMenusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsChildrenPMenusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemIDByPIDCompletedEventHandler(object sender, GetItemIDByPIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemIDByPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemIDByPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChildrenPMenuCompletedEventHandler(object sender, GetChildrenPMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenPMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenPMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMenuPrivilegeListOfAppCompletedEventHandler(object sender, GetMenuPrivilegeListOfAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuPrivilegeListOfAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuPrivilegeListOfAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMenuAndElementPrivilegeListOfAppCompletedEventHandler(object sender, GetMenuAndElementPrivilegeListOfAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuAndElementPrivilegeListOfAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuAndElementPrivilegeListOfAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMenuAndElementPrivilegeListOfRoleCompletedEventHandler(object sender, GetMenuAndElementPrivilegeListOfRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuAndElementPrivilegeListOfRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuAndElementPrivilegeListOfRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ParentMenuIDOfMenuPrivilegeCompletedEventHandler(object sender, ParentMenuIDOfMenuPrivilegeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParentMenuIDOfMenuPrivilegeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ParentMenuIDOfMenuPrivilegeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMenuPrivilegeIDByMenuIDCompletedEventHandler(object sender, GetMenuPrivilegeIDByMenuIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuPrivilegeIDByMenuIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuPrivilegeIDByMenuIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemIDOfPrivilegesCompletedEventHandler(object sender, GetItemIDOfPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemIDOfPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemIDOfPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591